package com.github.vshnv.projecteuler

class Problem2: Solution() {
    companion object {
        const val MAX = 4_000_000
    }
    /**
     *
     * Even Fibonacci numbers
     * Problem 2
     * IEach new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
     *
     * @see <a href="https://projecteuler.net/problem=2">https://projecteuler.net/problem=2</a>
     *
     */
    override fun solve() {
        println(evenFib.sum())
    }

    private val evenFib = sequence {
        val elem = IntArray(2) { 1 }
        while (nextElement(elem)) {
            if ((elem[1] and 1) == 0) {
                yield(elem[1])
            }
        }
    }

    private fun nextElement(arr: IntArray): Boolean {
        val last = arr[1]
        arr[1] = arr[0] + arr[1]
        arr[0] = last
        return arr[1] < MAX
    }
}